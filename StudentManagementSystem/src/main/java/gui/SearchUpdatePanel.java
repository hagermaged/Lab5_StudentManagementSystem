
package gui;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.io.IOException;
import java.util.*;
import model.StudentManager;
import model.Student;
import model.FileHandler;


public class SearchUpdatePanel extends javax.swing.JPanel {
    //intializing variables
    private StudentManager studentManager;
    private DefaultTableModel tableModel;
    
    //constructor
    public SearchUpdatePanel() {
        initComponents();
        this.studentManager = new StudentManager();
        setupTable();
        setupSearchType(); // Initialize search type
    }
        private void setupTable() {
        // Configure table
        jTable1.setDefaultEditor(Object.class, null);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setRowHeight(25);
        
        // Set up table model
        tableModel = new DefaultTableModel(
            new Object[][]{},
            new String[]{"ID", "Full Name", "Age", "Gender", "Department", "GPA"}
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Make table non-editable
            }
        };
        jTable1.setModel(tableModel);
        
        // Add selection listener to populate form when row is selected
        jTable1.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting() && jTable1.getSelectedRow() != -1) {
                fillFormFromTable();
            }
        });
    }
           private void setupSearchType() {
        // Set default search type to "By Name"
       searchType.setSelectedIndex(0);
           }
           

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        searchType = new javax.swing.JComboBox<>();
        searchKeyword = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        newId = new javax.swing.JTextField();
        newName = new javax.swing.JTextField();
        newAge = new javax.swing.JTextField();
        newDepartment = new javax.swing.JTextField();
        newGpa = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        returnToMenuButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        newGender = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(252, 250, 247));
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 30, 80));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("☆ SEARCH/UPDATE ☆");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 30, 80));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("1- Search Student");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 30, 80));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("2- Update Student Information");

        searchType.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        searchType.setForeground(new java.awt.Color(0, 30, 80));
        searchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "by ID", "by Name", "" }));
        searchType.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        searchType.setFocusable(false);
        searchType.setName("searchTypeCombo"); // NOI18N

        searchKeyword.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        searchKeyword.setForeground(new java.awt.Color(0, 30, 80));
        searchKeyword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchKeyword.setName("searchField"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 30, 80));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Search By:");

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 30, 80));
        jLabel5.setText("Keyword:");

        searchButton.setBackground(new java.awt.Color(210, 220, 235));
        searchButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        searchButton.setForeground(new java.awt.Color(0, 30, 80));
        searchButton.setText("Search");
        searchButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchButton.setBorderPainted(false);
        searchButton.setName("searchButton"); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("resultsTable"); // NOI18N
        jScrollPane1.setViewportView(jTable1);
        jTable1.getAccessibleContext().setAccessibleName("resultsTable");

        newId.setName("updateIdField"); // NOI18N

        newName.setName("updateNameField"); // NOI18N
        newName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newNameActionPerformed(evt);
            }
        });

        newAge.setName("updateAgeField"); // NOI18N

        newDepartment.setName("updateDeptField"); // NOI18N

        newGpa.setName("updateGpaField"); // NOI18N

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 30, 80));
        jLabel6.setText("ID");

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 30, 80));
        jLabel7.setText("Name");

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 30, 80));
        jLabel8.setText("Age");

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 30, 80));
        jLabel9.setText("Gender");

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 30, 80));
        jLabel10.setText("Department");

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 30, 80));
        jLabel11.setText("Gpa");

        updateButton.setBackground(new java.awt.Color(210, 220, 235));
        updateButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        updateButton.setForeground(new java.awt.Color(0, 30, 80));
        updateButton.setText("Update");
        updateButton.setName("updateButton"); // NOI18N
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(210, 220, 235));
        clearButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        clearButton.setForeground(new java.awt.Color(0, 30, 80));
        clearButton.setText("Clear Form");
        clearButton.setName("clearButton"); // NOI18N
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        returnToMenuButton.setBackground(new java.awt.Color(210, 220, 235));
        returnToMenuButton.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 18)); // NOI18N
        returnToMenuButton.setForeground(new java.awt.Color(0, 30, 80));
        returnToMenuButton.setText("Return To Menu");
        returnToMenuButton.setName("returnButton"); // NOI18N
        returnToMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnToMenuButtonActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 30, 80));
        jSeparator1.setForeground(new java.awt.Color(0, 30, 80));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setBackground(new java.awt.Color(0, 30, 80));
        jSeparator3.setForeground(new java.awt.Color(0, 30, 80));

        newGender.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 14)); // NOI18N
        newGender.setForeground(new java.awt.Color(0, 30, 80));
        newGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        newGender.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        newGender.setFocusable(false);
        newGender.setName("searchTypeCombo"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(184, 184, 184)
                                    .addComponent(jButton1)
                                    .addGap(32, 32, 32))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(20, 20, 20)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField3)
                                    .addComponent(jTextField4)
                                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField5)
                                    .addComponent(jTextField2)
                                    .addComponent(jTextField6)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jButton3))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(215, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        searchType.getAccessibleContext().setAccessibleName("searchTypeCombo");
        newName.getAccessibleContext().setAccessibleName("updateNameField");
    }// </editor-fold>//GEN-END:initComponents

    private void fillFormFromTable() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            // Retrieve data from the model (not the view, in case of sorting/filtering)
            int modelRow = jTable1.convertRowIndexToModel(selectedRow);
            
            // Assuming the table model structure is: ID, Full Name, Age, Gender, Department, GPA
            String id = tableModel.getValueAt(modelRow, 0).toString();
            String name = tableModel.getValueAt(modelRow, 1).toString();
            String age = tableModel.getValueAt(modelRow, 2).toString();
            String gender = tableModel.getValueAt(modelRow, 3).toString();
            String department = tableModel.getValueAt(modelRow, 4).toString();
            String gpa = tableModel.getValueAt(modelRow, 5).toString();

            // Populate text fields using the new variable names
            newId.setText(id); 
            newName.setText(name); 
            newAge.setText(age); 
            newGender.setSelectedItem(gender); 
            newDepartment.setText(department); 
            newGpa.setText(gpa); 
            
            // ID must be non-editable during update
            newId.setEditable(false);
        }
    }
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_clearButtonActionPerformed
 private void clearForm() {
        newId.setText("");
        newName.setText("");
        newAge.setText("");
        newGender.setSelectedIndex(0);
        newDepartment.setText("");
        newGpa.setText("");
        jTable1.clearSelection();
    }
    private void newNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newNameActionPerformed
//search button clicked
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
    String keyword = searchKeyword.getText().trim();
    if (keyword.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a search term!", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        String selectedSearchType = searchType.getSelectedItem().toString(); // CHANGED: searchType -> selectedSearchType
        ArrayList<Student> results;
        
        if ("by ID".equals(selectedSearchType)) { // CHANGED: searchType -> selectedSearchType
            // Search by ID only - exact match
            results = searchById(keyword);
        } else {
            // Search by Name - partial match
            results = (ArrayList<Student>) studentManager.searchStudent(keyword);
        }
        updateResultsTable(results);
        
        if (results.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No students found!", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error searching: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
                    
    }//GEN-LAST:event_searchButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
         if (newId.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a student to update!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int id = Integer.parseInt(newId.getText().trim());
            String name = newName.getText().trim();
            double age = Double.parseDouble(newAge.getText().trim());
            String gender = newGender.getSelectedItem().toString();
            String department = newDepartment.getText().trim();
            double gpa = Double.parseDouble(newGpa.getText().trim());

            // Create updated student object
            Student updatedStudent = new Student(id, name, age, gender, department, gpa);
            
            // Perform update
            String result = studentManager.updateStudent(id, updatedStudent);
            JOptionPane.showMessageDialog(this, result, "Update Result", JOptionPane.INFORMATION_MESSAGE);
            
            if (result.contains("successfully")) {
                clearForm();
                // Refresh the search results
                clearButtonActionPerformed(null);
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter valid numbers for Age and GPA!", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Update failed: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void returnToMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnToMenuButtonActionPerformed
        // TODO add your handling code here:
          java.awt.Window window = javax.swing.SwingUtilities.getWindowAncestor(this);
        if (window instanceof MainFrame) {
            MainFrame mainFrame = (MainFrame) window;
            mainFrame.showPanel("Dashboard");
        }
    }//GEN-LAST:event_returnToMenuButtonActionPerformed

  
    
  private ArrayList<Student> searchById(String keyword) {
        ArrayList<Student> results = new java.util.ArrayList<>();
        
        try {
            int searchId = Integer.parseInt(keyword);
            // Get all students and filter by exact ID match
            ArrayList<Student> allStudents = (ArrayList<Student>) studentManager.viewStudents();
            for (Student student : allStudents) {
                if (student.getId() == searchId) {
                    results.add(student);
                    break; // ID should be unique, so we can break after finding one
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Please enter a valid numeric ID when searching by ID!", 
                "Invalid ID", 
                JOptionPane.WARNING_MESSAGE);
        }
        
        return results;
    }
    private void updateResultsTable(ArrayList<Student> students) {
        tableModel.setRowCount(0); // Clear existing data
        
        for (Student student : students) {
            tableModel.addRow(new Object[]{
                student.getId(),
                student.getFullName(),
                student.getAge(),
                student.getGender(),
                student.getDepartment(),
                student.getGPA()
            });
        }
    }
    private void searchTypeActionPerformed(java.awt.event.ActionEvent evt) {
        String selectedSearchType = searchType.getSelectedItem().toString(); // Changed variable name
    if ("By ID".equals(selectedSearchType)) {
        searchKeyword.setToolTipText("Enter student ID (numbers only)");
    } else {
        searchKeyword.setToolTipText("Enter student name (full or partial)");
    }
    }                                           
        
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField newAge;
    private javax.swing.JTextField newDepartment;
    private javax.swing.JComboBox<String> newGender;
    private javax.swing.JTextField newGpa;
    private javax.swing.JTextField newId;
    private javax.swing.JTextField newName;
    private javax.swing.JButton returnToMenuButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchKeyword;
    private javax.swing.JComboBox<String> searchType;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
